{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\guilherme.soares\\\\Desktop\\\\react-projects\\\\nextjs-ch23\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      address: props.meetupData.address,\n      title: props.meetupData.title,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 2\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  MongoClient.connect();\n  const client = await MongoClient.connect('mongodb+srv://GuilhermeMartins:u4TxVuajIHGCHhBG@cluster0.nkwtyuw.mongodb.net/meetupsDB?retryWrites=true&w=majority');\n  const meetupsDB = client.db();\n  const meetupsCollection = meetupsDB.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  MongoClient.connect();\n  const client = await MongoClient.connect('mongodb+srv://GuilhermeMartins:u4TxVuajIHGCHhBG@cluster0.nkwtyuw.mongodb.net/meetupsDB?retryWrites=true&w=majority');\n  const meetupsDB = client.db();\n  const meetupsCollection = meetupsDB.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        description: selectedMeetup.description,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address\n      }\n    },\n    // unlocks incremental static generation\n    // used in websites that has a lot of requests\n    // regenerates data after every n seconds defined below\n    // (if there are requests for data)\n    revalidate: 10\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/guilherme.soares/Desktop/react-projects/nextjs-ch23/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","Fragment","Head","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","connect","client","meetupsDB","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id","revalidate"],"mappings":"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","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\n\r\n\r\nfunction MeetupDetails(props) { \r\n\r\n\treturn(\r\n\t<Fragment>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>{props.meetupData.title}</title>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname='description'\r\n\t\t\t\t\tcontent={props.meetupData.description}\r\n\t\t\t\t/>\r\n\t\t\t</Head>\r\n\t\t\t<MeetupDetail\r\n\t\timage={props.meetupData.image}\r\n\t\taddress={props.meetupData.address}\r\n\t\ttitle={props.meetupData.title}\r\n\t\tdescription={props.meetupData.description}\r\n\t/>\r\n\t</Fragment>)\r\n\t\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\tMongoClient.connect();\r\n\tconst client = await MongoClient.connect('mongodb+srv://GuilhermeMartins:u4TxVuajIHGCHhBG@cluster0.nkwtyuw.mongodb.net/meetupsDB?retryWrites=true&w=majority');\r\n\r\n\tconst meetupsDB = client.db();\r\n\r\n\tconst meetupsCollection = meetupsDB.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find({},{_id: 1}).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback:false,\r\n\t\tpaths: meetups.map(meetup => ({\r\n\t\t\tparams: { meetupId: meetup._id.toString() }\r\n\t\t})),\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tMongoClient.connect();\r\n\tconst client = await MongoClient.connect('mongodb+srv://GuilhermeMartins:u4TxVuajIHGCHhBG@cluster0.nkwtyuw.mongodb.net/meetupsDB?retryWrites=true&w=majority');\r\n\r\n\tconst meetupsDB = client.db();\r\n\r\n\tconst meetupsCollection = meetupsDB.collection('meetups');\r\n\r\n\tconst selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)});\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: {\r\n\t\t\t\tid: selectedMeetup._id.toString(),\r\n\t\t\t\ttitle: selectedMeetup.title,\r\n\t\t\t\tdescription: selectedMeetup.description,\r\n\t\t\t\timage: selectedMeetup.image,\r\n\t\t\t\taddress: selectedMeetup.address\r\n\t\t\t}\r\n\t\t},\r\n\t\t// unlocks incremental static generation\r\n\t\t// used in websites that has a lot of requests\r\n\t\t// regenerates data after every n seconds defined below\r\n\t\t// (if there are requests for data)\r\n\t\trevalidate: 10 }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}