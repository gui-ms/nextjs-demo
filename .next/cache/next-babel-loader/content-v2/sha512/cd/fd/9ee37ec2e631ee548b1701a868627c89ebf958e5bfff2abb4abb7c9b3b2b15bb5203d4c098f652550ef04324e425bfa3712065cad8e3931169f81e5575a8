{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\guilherme.soares\\\\Desktop\\\\react-projects\\\\nextjs-ch23\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from 'react';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n} // Alternative to getStaticProps\n// Runs for every incoming request\n\n/* export async function getServerSideProps(context) {\r\n\tconst req = context.req;\r\n\tconst res = context.res;\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: DUMMY_MEETUPS\r\n\t\t}\r\n\t}\r\n}; */\n\n\nexport async function getStaticProps() {\n  MongoClient.connect();\n  const client = await MongoClient.connect('mongodb+srv://GuilhermeMartins:u4TxVuajIHGCHhBG@cluster0.nkwtyuw.mongodb.net/meetupsDB?retryWrites=true&w=majority');\n  const meetupsDB = client.db();\n  const meetupsCollection = meetupsDB.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    // unlocks incremental static generation\n    // used in websites that has a lot of requests\n    // regenerates data after every n seconds defined below\n    // (if there are requests for data)\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/guilherme.soares/Desktop/react-projects/nextjs-ch23/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","MongoClient","MeetupList","Fragment","HomePage","props","meetups","getStaticProps","connect","client","meetupsDB","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAExB,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,C,CAED;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACtCN,EAAAA,WAAW,CAACO,OAAZ;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACO,OAAZ,CAAoB,oHAApB,CAArB;AAEA,QAAME,SAAS,GAAGD,MAAM,CAACE,EAAP,EAAlB;AAEA,QAAMC,iBAAiB,GAAGF,SAAS,CAACG,UAAV,CAAqB,SAArB,CAA1B;AAEA,QAAMP,OAAO,GAAG,MAAMM,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACNX,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAEA,OAAO,CAACW,GAAR,CAAYC,MAAM,KAAK;AAC/BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADiB;AAE/BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFe;AAG/BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHiB;AAI/BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ2B,OAAL,CAAlB;AADH,KADD;AASN;AACA;AACA;AACA;AACAC,IAAAA,UAAU,EAAE;AAbN,GAAP;AAcA;AAED,eAAerB,QAAf","sourcesContent":["\r\nimport Head from 'next/head'\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\nimport { Fragment } from 'react';\r\n\r\n\r\n\r\nfunction HomePage(props) {\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>React Meetups</title>\r\n\t\t\t</Head>\r\n\t\t\t<MeetupList meetups={props.meetups} />\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\n// Alternative to getStaticProps\r\n// Runs for every incoming request\r\n/* export async function getServerSideProps(context) {\r\n\tconst req = context.req;\r\n\tconst res = context.res;\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: DUMMY_MEETUPS\r\n\t\t}\r\n\t}\r\n}; */\r\n\r\nexport async function getStaticProps() {\r\n\tMongoClient.connect();\r\n\tconst client = await MongoClient.connect('mongodb+srv://GuilhermeMartins:u4TxVuajIHGCHhBG@cluster0.nkwtyuw.mongodb.net/meetupsDB?retryWrites=true&w=majority');\r\n\r\n\tconst meetupsDB = client.db();\r\n\r\n\tconst meetupsCollection = meetupsDB.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find().toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: meetups.map(meetup => ({\r\n\t\t\t\ttitle: meetup.title,\r\n\t\t\t\taddress: meetup.address,\r\n\t\t\t\timage: meetup.image,\r\n\t\t\t\tid: meetup._id.toString()\r\n\t\t\t}))\r\n\t\t},\r\n\t\t// unlocks incremental static generation\r\n\t\t// used in websites that has a lot of requests\r\n\t\t// regenerates data after every n seconds defined below\r\n\t\t// (if there are requests for data)\r\n\t\trevalidate: 10 }\r\n}\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}